# -*-coding=utf-8-*-
__author__ = 'aqua'

import download
import hcdata
import hitTopTest2
import datetime as dt
from datetime import timedelta
"""
   This is for test
"""

if __name__ == '__main__':
   # code_pre_close_map = [('000760','3.58')]
   # date = '20180919'

   code_pre_close_map = [('000009', '5.02'), ('000068', '4.25'), ('000524', '7.36'), ('000609', '6.0'), ('000622', '9.53'), ('000836', '4.14'), ('000851', '4.76'), ('000922', '6.65'), ('000931', '7.84'), ('000935', '16.47'), ('000939', '1.3'), ('000971', '4.36'), ('002018', '1.35'), ('002026', '5.78'), ('002045', '5.25'), ('002058', '12.17'), ('002102', '2.06'), ('002164', '3.25'), ('002194', '5.57'), ('002209', '7.38'), ('002226', '5.6'), ('002288', '3.25'), ('002328', '6.43'), ('002407', '10.73'), ('002417', '8.55'), ('002453', '5.47'), ('002492', '5.56'), ('002543', '12.16'), ('002549', '4.73'), ('002584', '7.41'), ('002604', '2.08'), ('002608', '7.23'), ('002619', '4.1'), ('002670', '10.29'), ('002680', '3.75'), ('002687', '6.99'), ('002708', '8.95'), ('002721', '6.36'), ('002779', '15.3'), ('002837', '13.93'), ('002856', '20.93'), ('002875', '16.13'), ('300018', '5.31'), ('300099', '4.52'), ('300126', '5.57'), ('300234', '6.7'), ('300262', '4.78'), ('300268', '10.67'), ('300483', '28.3'), ('300541', '13.96'), ('300543', '16.93'), ('300606', '18.28'), ('300636', '20.57'), ('600064', '8.83'), ('600070', '6.83'), ('600074', '1.42'), ('600119', '7.99'), ('600165', '4.78'), ('600202', '3.76'), ('600226', '3.36'), ('600228', '7.2'), ('600247', '5.1'), ('600275', '2.87'), ('600278', '9.1'), ('600283', '14.16'), ('600290', '5.71'), ('600316', '9.99'), ('600355', '3.98'), ('600366', '5.65'), ('600400', '4.0'), ('600462', '4.43'), ('600556', '3.62'), ('600621', '9.09'), ('600624', '7.4'), ('600635', '5.08'), ('600638', '9.04'), ('600639', '12.9'), ('600649', '5.88'), ('600695', '6.09'), ('600753', '15.88'), ('600773', '6.81'), ('600807', '2.61'), ('600817', '7.37'), ('600843', '7.26'), ('600846', '7.63'), ('600848', '20.89'), ('600870', '2.82'), ('600895', '16.61'), ('601319', '3.34'), ('603106', '11.72'), ('603165', '17.21'), ('603180', '59.96'), ('603501', '33.06'), ('603519', '8.39'), ('603569', '12.18'), ('603648', '12.11'), ('603738', '13.47'), ('603877', '18.59')]
   date = '20181116'
   date_next = '20181015'
   load_dir = '../../data/excels'
   compare_dir = '../../data/compare'

   hcdata.removeall(load_dir)
   code_list = download.download(code_pre_close_map, date, load_dir)
   df_list = hcdata.loaddata(load_dir, save=False)
   result = hitTopTest2.start_test_by_df(df_list)
#    if len(result) > 0:
#       hcdata.removeall(compare_dir)
#       download.download(result, date_next, compare_dir) 
#       compare_list = hcdata.loaddata(compare_dir, save=False)
#       if len(compare_list) > 0:
#          for res in result:
#              for df in compare_list:
#                  if df.iloc[0]['code'] == res[0]:
#                     avg = (df.iloc[0]['price'] + df.iloc[-1]['price'] + df['price'].min() + df['price'].max()) / 4
#                     print('[%s] buyed price=%s, next day: avg=%s, open=%s, close=%s, low=%s, high=%s' % (res[0], res[1], avg, df.iloc[0]['price'], df.iloc[-1]['price'], df['price'].min(), df['price'].max()))
#                     continue 
          
           





