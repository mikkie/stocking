# -*-coding=utf-8-*-
__author__ = 'aqua'

import download
import hcdata
import hitTopTest2
import datetime as dt
from datetime import timedelta
"""
   This is for test
"""

if __name__ == '__main__':
   # code_pre_close_map = [('000760','3.58')]
   # date = '20180919'

   code_pre_close_map = [('000007', '7.58'), ('000017', '4.59'), ('000018', '2.38'), ('000058', '4.75'), ('000061', '4.1'), ('000533', '3.32'), ('000585', '2.25'), ('000587', '2.88'), ('000592', '2.6'), ('000607', '3.99'), ('000622', '8.69'), ('000673', '5.66'), ('000707', '2.91'), ('000727', '1.55'), ('000753', '3.02'), ('000816', '1.54'), ('000835', '4.76'), ('000850', '3.62'), ('000966', '3.49'), ('000982', '1.43'), ('000995', '6.31'), ('002005', '2.65'), ('002018', '1.32'), ('002054', '7.65'), ('002071', '4.86'), ('002076', '3.52'), ('002102', '2.04'), ('002114', '7.12'), ('002118', '4.78'), ('002132', '2.91'), ('002134', '6.32'), ('002143', '3.59'), ('002147', '6.35'), ('002188', '3.56'), ('002259', '2.65'), ('002263', '1.9'), ('002306', '3.15'), ('002346', '9.69'), ('002348', '3.43'), ('002445', '2.54'), ('002473', '6.69'), ('002489', '2.97'), ('002496', '2.15'), ('002503', '2.63'), ('002534', '5.72'), ('002552', '4.66'), ('002570', '4.7'), ('002619', '3.65'), ('002650', '3.97'), ('002660', '6.31'), ('002687', '6.2'), ('002786', '6.18'), ('300027', '4.8'), ('300043', '3.56'), ('300048', '2.5'), ('300069', '11.08'), ('300104', '3.38'), ('300116', '1.83'), ('300187', '5.84'), ('300251', '7.46'), ('300283', '4.63'), ('300299', '4.69'), ('300336', '4.45'), ('300426', '7.49'), ('300441', '6.55'), ('300471', '5.7'), ('300505', '29.13'), ('300521', '9.45'), ('300525', '22.17'), ('600074', '1.43'), ('600086', '4.82'), ('600113', '7.34'), ('600163', '3.06'), ('600202', '3.94'), ('600209', '3.45'), ('600220', '2.19'), ('600243', '4.6'), ('600247', '4.69'), ('600275', '2.95'), ('600287', '5.35'), ('600289', '2.52'), ('600301', '6.02'), ('600319', '4.95'), ('600321', '1.95'), ('600336', '3.54'), ('600386', '3.3'), ('600393', '2.63'), ('600421', '6.69'), ('600446', '9.86'), ('600634', '2.51'), ('600654', '2.22'), ('600664', '3.64'), ('600695', '5.77'), ('600701', '3.1'), ('600735', '5.33'), ('600747', '1.46'), ('600800', '5.55'), ('600807', '2.46'), ('600864', '4.6'), ('600868', '2.77'), ('600870', '2.98'), ('600896', '4.21'), ('601177', '6.51'), ('601558', '1.19'), ('601599', '3.23'), ('603032', '32.39'), ('603038', '17.66'), ('603186', '14.88'), ('603389', '11.18'), ('603499', '24.61'), ('603555', '6.67'), ('603663', '15.57')]
   date = '20181113'
   date_next = '20181015'
   load_dir = '../../data/excels'
   compare_dir = '../../data/compare'

   hcdata.removeall(load_dir)
   code_list = download.download(code_pre_close_map, date, load_dir)
   df_list = hcdata.loaddata(load_dir, save=False)
   result = hitTopTest2.start_test_by_df(df_list)
#    if len(result) > 0:
#       hcdata.removeall(compare_dir)
#       download.download(result, date_next, compare_dir) 
#       compare_list = hcdata.loaddata(compare_dir, save=False)
#       if len(compare_list) > 0:
#          for res in result:
#              for df in compare_list:
#                  if df.iloc[0]['code'] == res[0]:
#                     avg = (df.iloc[0]['price'] + df.iloc[-1]['price'] + df['price'].min() + df['price'].max()) / 4
#                     print('[%s] buyed price=%s, next day: avg=%s, open=%s, close=%s, low=%s, high=%s' % (res[0], res[1], avg, df.iloc[0]['price'], df.iloc[-1]['price'], df['price'].min(), df['price'].max()))
#                     continue 
          
           





