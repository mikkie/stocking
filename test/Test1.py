#!/usr/bin/env python
#-*- coding: utf-8 -*-

"""使用urllib2请求代理服务器
请求http和https网页均适用
"""

import threading
import tushare
import sys
sys.path.append('..')
import src.t1.trade.ProxyManager

#要访问的目标网页
code_list = ['603999', '603996', '603988', '603987', '603978', '603977', '603976', '603970', '603969', '603966', '603963', '603960', '603959', '603958', '603955', '603937', '603936', '603933', '603929', '603928', '603922', '603920', '603917', '603916', '603912', '603908', '603906', '603903', '603897', '603890', '603888', '603887', '603886', '603882', '603881', '603876', '603861', '603860', '603859', '603856', '603848', '603829', '603826', '603822', '603819', '603817', '603813', '603811', '603809', '603803', '603800', '603798', '603797', '603779', '603778', '603777', '603776', '603738', '603733', '603727', '603725', '603722', '603721', '603717', '603716', '603712', '603711', '603709', '603707', '603703', '603701', '603689', '603688', '603685', '603683', '603680', '603677', '603676', '603668', '603661', '603656', '603655', '603648', '603638', '603637', '603633', '603630', '603628', '603626', '603619', '603618', '603615', '603612', '603608', '603607', '603605', '603603', '603596', '603577', '603559', '603557', '603533', '603528', '603527', '603518', '603516', '603507', '603506', '603500', '603499', '603477', '603466', '603429', '603421', '603398', '603396', '603393', '603388', '603386', '603378', '603367', '603366', '603365', '603363', '603359', '603356', '603348', '603339', '603336', '603330', '603329', '603323', '603322', '603321', '603319', '603309', '603305', '603299', '603289', '603283', '603278', '603277', '603266']

proxyManager = src.t1.trade.ProxyManager.ProxyManager()


def async_exe(df):
    print(df)

def fun_timer():
    try:
       for i in range(1): 
           print(proxyManager.get_realtime_quotes(code_list,batch_size=50,async_exe=None))
    except Exception as e:
           print(e)
    # global timer
    # timer = threading.Timer(3, fun_timer)
    # timer.start()

fun_timer()
# fun_timer()
# fun_timer()
# timer = threading.Timer(3, fun_timer)
# timer.start()        